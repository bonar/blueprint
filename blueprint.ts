class BluePrint {
  private static element: HTMLImageElement;
  private static ELEMENT_ID: string = 'blueprint-autogenerated-image';

  public static insert(url: string, width: number, height: number) {
    if (!url) {
      throw new Error("specify image url");
    }
    if (BluePrint.element) {
      BluePrint.element.src = url;
    } else {
      BluePrint.insertImage(url);
    }
    BluePrint.element.style.width  = width  + 'px';
    BluePrint.element.style.height = height + 'px';
  }

  public static setOpacity(opacity: string) {
    BluePrint.assertElement();
    BluePrint.element.style.opacity = opacity;
  }

  public static setOffset(_top: string, left: string) {
    BluePrint.assertElement();
    BluePrint.element.style.top  = _top;
    BluePrint.element.style.left = left;
  }

  public static show() {
    BluePrint.element.style.visibility = "visible";
  }

  public static hide() {
    BluePrint.element.style.visibility = "hidden";
  }

  private static insertImage(url: string) {
    BluePrint.element = document.createElement('img');
    BluePrint.element.src = url;
    BluePrint.element.id  = BluePrint.ELEMENT_ID;
    BluePrint.setBaseStyle(BluePrint.element);
    document.body.appendChild(BluePrint.element);
  }

  private static setBaseStyle(img: HTMLImageElement) {
    img.style.position = "absolute";
    img.style.top      = "0";
    img.style.left     = "0";
    img.style.zIndex   = "999";
    img.style.opacity  = "0.5";
  }

  private static assertElement() {
    if (!BluePrint.element) {
      throw new Error("call insertImage(url) at first");
    }
  }

}

